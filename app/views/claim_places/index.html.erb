<div class="carousel">
  <div class="carousel-inner">
    <div class="active item five"></div>
  </div>
</div>

<div class="claimPlacesContainer container">

  <div class="row-fluid">
    <div class="btn-group">
      <button id="claimPlace" class="btn btn-info btn-large claimNewPlaceButton" role="button"
              onclick="document.location.href='<%= new_claim_place_path %>';return false;"
              >
        Claim Store
      </button>
    </div>
  </div>
  
<!--   <section id="options" class="clearfix">
    <h3>Sort</h3>
    <ul id="sort-by" class="option-set clearfix" data-option-key="sortBy">
      <li>
        <a href="#sortBy=name" data-option-value="name">name</a>
      </li>
    </ul>
  </section> -->

	<div id="placeListContainer">
		<% @claimPlace.each_with_index do |place,index| %>
			<div class="isotopeStore">
				<a class="placesName" href="<%= claim_place_path(place.id) %>">
					<%= place.storeName %>
				</a>	
        
        <div class="placesAddress">
          <%= place.address %>
        </div>
					
        <a class="placesWebsite" href="http://<%= place.ownerWebsite %>">
          <%= place.ownerWebsite %> 
        </a>

        <div class="placesEmail">
					<%= place.ownerEmail %>
				</div>
			</div>
		<% end %>
	</div>
</div>







<script type="text/javascript">
  var $optionSets = $('#options .option-set'),
      $optionsLinks = $optionSets.find('a');

  $optionsLinks.click(function(){
    var $this = $(this);
    // don't proceed if already selected
    if ( $this.hasClass('selected') ) {
      return false;
    }
    var $optionSet = $this.parents('.option-set');
    $optionSet.find('.selected').removeClass('selected');
    $this.addClass('selected');

    // make option object dynamically, i.e. { filter: '.my-filter-class' }
    var options = {},
        key = $optionSet.attr('data-option-key'),
        value = $this.attr('data-option-value');
    // parse 'false' as false boolean
    value = value === 'false' ? false : value;
    options[ key ] = value;
    if ( key === 'layoutMode' && typeof changeLayoutMode === 'function' ) {
      // changes in layout modes need extra logic
      changeLayoutMode( $this, options )
    } else {
      // otherwise, apply new options
      $container.isotope( options );
    }
    
    return false;    
  });


</script>

<script type="text/css">
#options ul {
  margin: 0;
  list-style: none;
}

#options li a.select{
  backbround-color: #13F;
  text-shadow: none;
  color: white;
}

#options li {
  float: left;
  margin-bottom: 0.2em;
}

#options li a {
  border-left: 1px solid hsla(0, 0%, 100%, 0.3);
  border-right: 1px solid hsla(0, 0%, 0%, 0.2);
}

#options li a {
  display: block;
  padding: 0.4em 0.5em;
  background-color: #DDD;
  color: #222;
  font-weight: bold;
  text-shadow: 0 1px hsla( 0, 0%, 100%, 0.5 );
  background-image: -webkit-linear-gradient( top, hsla( 0, 0%, 100%, 0.5 ), hsla( 0, 0%, 100%, 0.0 ) );
  background-image: -moz-linear-gradient( top, hsla( 0, 0%, 100%, 0.5 ), hsla( 0, 0%, 100%, 0.0 ) );
  background-image: -ms-linear-gradient( top, hsla( 0, 0%, 100%, 0.5 ), hsla( 0, 0%, 100%, 0.0 ) );
  background-image: -o-linear-gradient( top, hsla( 0, 0%, 100%, 0.5 ), hsla( 0, 0%, 100%, 0.0 ) );
  background-image: linear-gradient( top, hsla( 0, 0%, 100%, 0.5 ), hsla( 0, 0%, 100%, 0.0 ) );
}

/**** Isotope Filtering ****/

.isotope-item {
  z-index: 2;
}

.isotope-hidden.isotope-item {
  pointer-events: none;
  z-index: 1;
}

/**** Isotope CSS3 transitions ****/

.isotope,
.isotope .isotope-item {
  -webkit-transition-duration: 0.8s;
     -moz-transition-duration: 0.8s;
      -ms-transition-duration: 0.8s;
       -o-transition-duration: 0.8s;
          transition-duration: 0.8s;
}

.isotope {
  -webkit-transition-property: height, width;
     -moz-transition-property: height, width;
      -ms-transition-property: height, width;
       -o-transition-property: height, width;
          transition-property: height, width;
}

.isotope .isotope-item {
  -webkit-transition-property: -webkit-transform, opacity;
     -moz-transition-property:    -moz-transform, opacity;
      -ms-transition-property:     -ms-transform, opacity;
       -o-transition-property:      -o-transform, opacity;
          transition-property:         transform, opacity;
}

/**** disabling Isotope CSS3 transitions ****/

.isotope.no-transition,
.isotope.no-transition .isotope-item,
.isotope .isotope-item.no-transition {
  -webkit-transition-duration: 0s;
     -moz-transition-duration: 0s;
      -ms-transition-duration: 0s;
       -o-transition-duration: 0s;
          transition-duration: 0s;
}

</script>